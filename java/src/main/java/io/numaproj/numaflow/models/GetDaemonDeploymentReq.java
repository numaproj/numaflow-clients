/*
 * Numaflow
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.numaproj.numaflow.models;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.kubernetes.client.openapi.models.V1EnvVar;
import io.kubernetes.client.openapi.models.V1ResourceRequirements;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import io.numaproj.numaflow.ApiClient;
/**
 * GetDaemonDeploymentReq
 */
@JsonPropertyOrder({
  GetDaemonDeploymentReq.JSON_PROPERTY_DEFAULT_RESOURCES,
  GetDaemonDeploymentReq.JSON_PROPERTY_ENV,
  GetDaemonDeploymentReq.JSON_PROPERTY_IS_B_SVC_TYPE,
  GetDaemonDeploymentReq.JSON_PROPERTY_IMAGE,
  GetDaemonDeploymentReq.JSON_PROPERTY_PULL_POLICY
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.7.0")
public class GetDaemonDeploymentReq {
  public static final String JSON_PROPERTY_DEFAULT_RESOURCES = "DefaultResources";
  private V1ResourceRequirements defaultResources = null;

  public static final String JSON_PROPERTY_ENV = "Env";
  private List<V1EnvVar> env = new ArrayList<>();

  public static final String JSON_PROPERTY_IS_B_SVC_TYPE = "ISBSvcType";
  private String isBSvcType;

  public static final String JSON_PROPERTY_IMAGE = "Image";
  private String image;

  public static final String JSON_PROPERTY_PULL_POLICY = "PullPolicy";
  private String pullPolicy;

  public GetDaemonDeploymentReq() { 
  }

  public GetDaemonDeploymentReq defaultResources(V1ResourceRequirements defaultResources) {
    this.defaultResources = defaultResources;
    return this;
  }

  /**
   * Get defaultResources
   * @return defaultResources
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DEFAULT_RESOURCES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public V1ResourceRequirements getDefaultResources() {
    return defaultResources;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_RESOURCES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDefaultResources(V1ResourceRequirements defaultResources) {
    this.defaultResources = defaultResources;
  }


  public GetDaemonDeploymentReq env(List<V1EnvVar> env) {
    this.env = env;
    return this;
  }

  public GetDaemonDeploymentReq addEnvItem(V1EnvVar envItem) {
    if (this.env == null) {
      this.env = new ArrayList<>();
    }
    this.env.add(envItem);
    return this;
  }

  /**
   * Get env
   * @return env
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ENV)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public List<V1EnvVar> getEnv() {
    return env;
  }


  @JsonProperty(JSON_PROPERTY_ENV)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEnv(List<V1EnvVar> env) {
    this.env = env;
  }


  public GetDaemonDeploymentReq isBSvcType(String isBSvcType) {
    this.isBSvcType = isBSvcType;
    return this;
  }

  /**
   * Get isBSvcType
   * @return isBSvcType
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_B_SVC_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getIsBSvcType() {
    return isBSvcType;
  }


  @JsonProperty(JSON_PROPERTY_IS_B_SVC_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsBSvcType(String isBSvcType) {
    this.isBSvcType = isBSvcType;
  }


  public GetDaemonDeploymentReq image(String image) {
    this.image = image;
    return this;
  }

  /**
   * Get image
   * @return image
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IMAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getImage() {
    return image;
  }


  @JsonProperty(JSON_PROPERTY_IMAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setImage(String image) {
    this.image = image;
  }


  public GetDaemonDeploymentReq pullPolicy(String pullPolicy) {
    this.pullPolicy = pullPolicy;
    return this;
  }

  /**
   * Get pullPolicy
   * @return pullPolicy
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PULL_POLICY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getPullPolicy() {
    return pullPolicy;
  }


  @JsonProperty(JSON_PROPERTY_PULL_POLICY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPullPolicy(String pullPolicy) {
    this.pullPolicy = pullPolicy;
  }


  /**
   * Return true if this GetDaemonDeploymentReq object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetDaemonDeploymentReq getDaemonDeploymentReq = (GetDaemonDeploymentReq) o;
    return Objects.equals(this.defaultResources, getDaemonDeploymentReq.defaultResources) &&
        Objects.equals(this.env, getDaemonDeploymentReq.env) &&
        Objects.equals(this.isBSvcType, getDaemonDeploymentReq.isBSvcType) &&
        Objects.equals(this.image, getDaemonDeploymentReq.image) &&
        Objects.equals(this.pullPolicy, getDaemonDeploymentReq.pullPolicy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(defaultResources, env, isBSvcType, image, pullPolicy);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetDaemonDeploymentReq {\n");
    sb.append("    defaultResources: ").append(toIndentedString(defaultResources)).append("\n");
    sb.append("    env: ").append(toIndentedString(env)).append("\n");
    sb.append("    isBSvcType: ").append(toIndentedString(isBSvcType)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    pullPolicy: ").append(toIndentedString(pullPolicy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `DefaultResources` to the URL query string
    if (getDefaultResources() != null) {
      joiner.add(String.format("%sDefaultResources%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getDefaultResources()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `Env` to the URL query string
    if (getEnv() != null) {
      for (int i = 0; i < getEnv().size(); i++) {
        if (getEnv().get(i) != null) {
          joiner.add(String.format("%sEnv%s%s=%s", prefix, suffix,
              "".equals(suffix) ? "" : String.format("%s%d%s", containerPrefix, i, containerSuffix),
              URLEncoder.encode(ApiClient.valueToString(getEnv().get(i)), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
        }
      }
    }

    // add `ISBSvcType` to the URL query string
    if (getIsBSvcType() != null) {
      joiner.add(String.format("%sISBSvcType%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getIsBSvcType()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `Image` to the URL query string
    if (getImage() != null) {
      joiner.add(String.format("%sImage%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getImage()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `PullPolicy` to the URL query string
    if (getPullPolicy() != null) {
      joiner.add(String.format("%sPullPolicy%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getPullPolicy()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

