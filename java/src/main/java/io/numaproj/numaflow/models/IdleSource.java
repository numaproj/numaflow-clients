/*
 * Numaflow
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.numaproj.numaflow.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * IdleSource
 */
@JsonPropertyOrder({
  IdleSource.JSON_PROPERTY_INCREMENT_BY,
  IdleSource.JSON_PROPERTY_STEP_INTERVAL,
  IdleSource.JSON_PROPERTY_THRESHOLD
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class IdleSource {
  public static final String JSON_PROPERTY_INCREMENT_BY = "incrementBy";
  private String incrementBy = null;

  public static final String JSON_PROPERTY_STEP_INTERVAL = "stepInterval";
  private String stepInterval = null;

  public static final String JSON_PROPERTY_THRESHOLD = "threshold";
  private String threshold = null;


  public IdleSource incrementBy(String incrementBy) {
    this.incrementBy = incrementBy;
    return this;
  }

   /**
   * Get incrementBy
   * @return incrementBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INCREMENT_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIncrementBy() {
    return incrementBy;
  }


  @JsonProperty(JSON_PROPERTY_INCREMENT_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncrementBy(String incrementBy) {
    this.incrementBy = incrementBy;
  }


  public IdleSource stepInterval(String stepInterval) {
    this.stepInterval = stepInterval;
    return this;
  }

   /**
   * Get stepInterval
   * @return stepInterval
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_STEP_INTERVAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStepInterval() {
    return stepInterval;
  }


  @JsonProperty(JSON_PROPERTY_STEP_INTERVAL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStepInterval(String stepInterval) {
    this.stepInterval = stepInterval;
  }


  public IdleSource threshold(String threshold) {
    this.threshold = threshold;
    return this;
  }

   /**
   * Get threshold
   * @return threshold
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_THRESHOLD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getThreshold() {
    return threshold;
  }


  @JsonProperty(JSON_PROPERTY_THRESHOLD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setThreshold(String threshold) {
    this.threshold = threshold;
  }


  /**
   * Return true if this IdleSource object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IdleSource idleSource = (IdleSource) o;
    return Objects.equals(this.incrementBy, idleSource.incrementBy) &&
        Objects.equals(this.stepInterval, idleSource.stepInterval) &&
        Objects.equals(this.threshold, idleSource.threshold);
  }

  @Override
  public int hashCode() {
    return Objects.hash(incrementBy, stepInterval, threshold);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IdleSource {\n");
    sb.append("    incrementBy: ").append(toIndentedString(incrementBy)).append("\n");
    sb.append("    stepInterval: ").append(toIndentedString(stepInterval)).append("\n");
    sb.append("    threshold: ").append(toIndentedString(threshold)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

