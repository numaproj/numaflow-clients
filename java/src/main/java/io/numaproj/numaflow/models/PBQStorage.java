/*
 * Numaflow
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.7.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.numaproj.numaflow.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.kubernetes.client.openapi.models.V1EmptyDirVolumeSource;
import io.numaproj.numaflow.models.PersistenceStrategy;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * PBQStorage defines the persistence configuration for a vertex.
 */
@ApiModel(description = "PBQStorage defines the persistence configuration for a vertex.")
@JsonPropertyOrder({
  PBQStorage.JSON_PROPERTY_EMPTY_DIR,
  PBQStorage.JSON_PROPERTY_PERSISTENT_VOLUME_CLAIM
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class PBQStorage {
  public static final String JSON_PROPERTY_EMPTY_DIR = "emptyDir";
  private V1EmptyDirVolumeSource emptyDir = null;

  public static final String JSON_PROPERTY_PERSISTENT_VOLUME_CLAIM = "persistentVolumeClaim";
  private PersistenceStrategy persistentVolumeClaim;


  public PBQStorage emptyDir(V1EmptyDirVolumeSource emptyDir) {
    this.emptyDir = emptyDir;
    return this;
  }

   /**
   * Get emptyDir
   * @return emptyDir
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EMPTY_DIR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public V1EmptyDirVolumeSource getEmptyDir() {
    return emptyDir;
  }


  @JsonProperty(JSON_PROPERTY_EMPTY_DIR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEmptyDir(V1EmptyDirVolumeSource emptyDir) {
    this.emptyDir = emptyDir;
  }


  public PBQStorage persistentVolumeClaim(PersistenceStrategy persistentVolumeClaim) {
    this.persistentVolumeClaim = persistentVolumeClaim;
    return this;
  }

   /**
   * Get persistentVolumeClaim
   * @return persistentVolumeClaim
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_PERSISTENT_VOLUME_CLAIM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PersistenceStrategy getPersistentVolumeClaim() {
    return persistentVolumeClaim;
  }


  @JsonProperty(JSON_PROPERTY_PERSISTENT_VOLUME_CLAIM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPersistentVolumeClaim(PersistenceStrategy persistentVolumeClaim) {
    this.persistentVolumeClaim = persistentVolumeClaim;
  }


  /**
   * Return true if this PBQStorage object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PBQStorage pbQStorage = (PBQStorage) o;
    return Objects.equals(this.emptyDir, pbQStorage.emptyDir) &&
        Objects.equals(this.persistentVolumeClaim, pbQStorage.persistentVolumeClaim);
  }

  @Override
  public int hashCode() {
    return Objects.hash(emptyDir, persistentVolumeClaim);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PBQStorage {\n");
    sb.append("    emptyDir: ").append(toIndentedString(emptyDir)).append("\n");
    sb.append("    persistentVolumeClaim: ").append(toIndentedString(persistentVolumeClaim)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

