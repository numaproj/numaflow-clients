/*
 * Numaflow
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.2.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.numaproj.numaflow.models;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.kubernetes.client.custom.Quantity;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import io.numaproj.numaflow.ApiClient;
/**
 * PersistenceStrategy defines the strategy of persistence
 */
@JsonPropertyOrder({
  PersistenceStrategy.JSON_PROPERTY_ACCESS_MODE,
  PersistenceStrategy.JSON_PROPERTY_STORAGE_CLASS_NAME,
  PersistenceStrategy.JSON_PROPERTY_VOLUME_SIZE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.7.0")
public class PersistenceStrategy {
  public static final String JSON_PROPERTY_ACCESS_MODE = "accessMode";
  private String accessMode;

  public static final String JSON_PROPERTY_STORAGE_CLASS_NAME = "storageClassName";
  private String storageClassName;

  public static final String JSON_PROPERTY_VOLUME_SIZE = "volumeSize";
  private io.kubernetes.client.custom.Quantity volumeSize = null;

  public PersistenceStrategy() { 
  }

  public PersistenceStrategy accessMode(String accessMode) {
    this.accessMode = accessMode;
    return this;
  }

  /**
   * Available access modes such as ReadWriteOnce, ReadWriteMany https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes
   * @return accessMode
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ACCESS_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getAccessMode() {
    return accessMode;
  }


  @JsonProperty(JSON_PROPERTY_ACCESS_MODE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccessMode(String accessMode) {
    this.accessMode = accessMode;
  }


  public PersistenceStrategy storageClassName(String storageClassName) {
    this.storageClassName = storageClassName;
    return this;
  }

  /**
   * Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
   * @return storageClassName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STORAGE_CLASS_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getStorageClassName() {
    return storageClassName;
  }


  @JsonProperty(JSON_PROPERTY_STORAGE_CLASS_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStorageClassName(String storageClassName) {
    this.storageClassName = storageClassName;
  }


  public PersistenceStrategy volumeSize(io.kubernetes.client.custom.Quantity volumeSize) {
    this.volumeSize = volumeSize;
    return this;
  }

  /**
   * Get volumeSize
   * @return volumeSize
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VOLUME_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public io.kubernetes.client.custom.Quantity getVolumeSize() {
    return volumeSize;
  }


  @JsonProperty(JSON_PROPERTY_VOLUME_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVolumeSize(io.kubernetes.client.custom.Quantity volumeSize) {
    this.volumeSize = volumeSize;
  }


  /**
   * Return true if this PersistenceStrategy object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PersistenceStrategy persistenceStrategy = (PersistenceStrategy) o;
    return Objects.equals(this.accessMode, persistenceStrategy.accessMode) &&
        Objects.equals(this.storageClassName, persistenceStrategy.storageClassName) &&
        Objects.equals(this.volumeSize, persistenceStrategy.volumeSize);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accessMode, storageClassName, volumeSize);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PersistenceStrategy {\n");
    sb.append("    accessMode: ").append(toIndentedString(accessMode)).append("\n");
    sb.append("    storageClassName: ").append(toIndentedString(storageClassName)).append("\n");
    sb.append("    volumeSize: ").append(toIndentedString(volumeSize)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `accessMode` to the URL query string
    if (getAccessMode() != null) {
      joiner.add(String.format("%saccessMode%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getAccessMode()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `storageClassName` to the URL query string
    if (getStorageClassName() != null) {
      joiner.add(String.format("%sstorageClassName%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getStorageClassName()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `volumeSize` to the URL query string
    if (getVolumeSize() != null) {
      joiner.add(String.format("%svolumeSize%s=%s", prefix, suffix, URLEncoder.encode(ApiClient.valueToString(getVolumeSize()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

